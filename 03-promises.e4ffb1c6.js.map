{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,OAAQJ,SAASC,cAAc,mBAC/BI,OAAQL,SAASC,cAAc,WAGjC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAIPV,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAoBC,GAClBA,EAAIC,iBAEJ,IAAMf,EAAagB,OAAOpB,EAAKI,WAAWiB,OACpChB,EAAYe,OAAOpB,EAAKK,UAAUgB,OAClCf,EAASc,OAAOpB,EAAKM,OAAOe,OAElC,GAAIjB,EAAa,GAAKC,EAAY,GAAKC,EAAS,EAC9C,IAAK,IAAIgB,EAAI,EAAGA,EAAIhB,EAAQgB,GAAK,EAC/Bd,EAAcc,EAAGlB,EAAaC,EAAYiB,GACvCC,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MACjBZ,EAAA2B,OAAOC,QAAQ,uBAA4CC,OAAnBlB,EAAW,EAAE,QAAYkB,OAANjB,EAAM,UAElEkB,OAAM,SAAAJ,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MAClBZ,EAAA2B,OAAOI,QAAQ,sBAAyCF,OAAnBlB,EAAW,EAAE,QAAYkB,OAANjB,EAAM,eAIpEZ,EAAA2B,OAAOI,QAAS,yD","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('[name=\"delay\"]'),\n  delayStep: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  button: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.form.addEventListener('submit', getPromise);\n\nfunction getPromise(evt) {\n  evt.preventDefault();\n\n  const firstDelay = Number(refs.firstDelay.value);\n  const delayStep = Number(refs.delayStep.value);\n  const amount = Number(refs.amount.value);\n\n  if (firstDelay > 0 && delayStep > 0 && amount > 0) {\n    for (let i = 0; i < amount; i += 1) {\n      createPromise(i, firstDelay + delayStep * i)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n        });\n    }\n  } else {\n    Notify.failure(`No no no firstDelay, delayStep, amount must be > 0`);\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelay","delayStep","amount","button","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","Number","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e4ffb1c6.js.map"}